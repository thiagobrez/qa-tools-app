cd2fc2c6490a09d109d9a61329109793
"use strict";

/* istanbul ignore next */
var cov_qwej15hyk = function () {
  var path = "/Users/feracode/Repos/qa-tools/qa-tools-app/src/components/index.ts";
  var hash = "04187df53bd3d5551247b295712a7fe8bf566c29";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/feracode/Repos/qa-tools/qa-tools-app/src/components/index.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 22
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "1": {
        start: {
          line: 4,
          column: 2
        },
        end: {
          line: 6,
          column: 4
        }
      },
      "2": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "3": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 51
        }
      },
      "4": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 15,
          column: 34
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 54
          },
          end: {
            line: 3,
            column: 55
          }
        },
        loc: {
          start: {
            line: 3,
            column: 69
          },
          end: {
            line: 7,
            column: 1
          }
        },
        line: 3
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 3,
            column: 22
          },
          end: {
            line: 7,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 22
          },
          end: {
            line: 3,
            column: 26
          }
        }, {
          start: {
            line: 3,
            column: 30
          },
          end: {
            line: 3,
            column: 50
          }
        }, {
          start: {
            line: 3,
            column: 54
          },
          end: {
            line: 7,
            column: 1
          }
        }],
        line: 3
      },
      "1": {
        loc: {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 6,
            column: 3
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 4,
            column: 33
          },
          end: {
            line: 4,
            column: 36
          }
        }, {
          start: {
            line: 4,
            column: 39
          },
          end: {
            line: 6,
            column: 3
          }
        }],
        line: 4
      },
      "2": {
        loc: {
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 4,
            column: 9
          },
          end: {
            line: 4,
            column: 12
          }
        }, {
          start: {
            line: 4,
            column: 16
          },
          end: {
            line: 4,
            column: 30
          }
        }],
        line: 4
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "04187df53bd3d5551247b295712a7fe8bf566c29"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var __importDefault =
/* istanbul ignore next */
(cov_qwej15hyk.s[0]++,
/* istanbul ignore next */
(cov_qwej15hyk.b[0][0]++, this) &&
/* istanbul ignore next */
(cov_qwej15hyk.b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_qwej15hyk.b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_qwej15hyk.f[0]++;
  cov_qwej15hyk.s[1]++;
  return (
    /* istanbul ignore next */
    (cov_qwej15hyk.b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_qwej15hyk.b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_qwej15hyk.b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_qwej15hyk.b[1][1]++, {
      "default": mod
    })
  );
}));

/* istanbul ignore next */
cov_qwej15hyk.s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
var Button_1 =
/* istanbul ignore next */
(cov_qwej15hyk.s[3]++, __importDefault(require("./Button")));

/* istanbul ignore next */
cov_qwej15hyk.s[4]++;
exports.Button = Button_1.default;